### proc_creation_win_msiexec_install_quiet.yaral ###
rule msiexec_quiet_installation {
    meta:
        description = `Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)`
        references = `https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec, https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md, https://twitter.com/_st0pp3r_/status/1583914244344799235`
        mitre = `attack.defense-evasion, attack.t1218.007`
        logsource = `process_creation`
        product = `windows`
    events:
        ($event.metadata.event_type = "PROCESS_LAUNCH") and
        (($event.target.process.file.full_path = /\\msiexec\.exe$/ nocase or
        $event.target.process.file.names = "msiexec.exe" nocase) and
        ($event.target.process.command_line = /-i/ nocase or
        $event.target.process.command_line = /\/i/ nocase or
        $event.target.process.command_line = /–i/ nocase or
        $event.target.process.command_line = /—i/ nocase or
        $event.target.process.command_line = /―i/ nocase or
        $event.target.process.command_line = /-package/ nocase or
        $event.target.process.command_line = /\/package/ nocase or
        $event.target.process.command_line = /–package/ nocase or
        $event.target.process.command_line = /—package/ nocase or
        $event.target.process.command_line = /―package/ nocase or
        $event.target.process.command_line = /-a/ nocase or
        $event.target.process.command_line = /\/a/ nocase or
        $event.target.process.command_line = /–a/ nocase or
        $event.target.process.command_line = /—a/ nocase or
        $event.target.process.command_line = /―a/ nocase or
        $event.target.process.command_line = /-j/ nocase or
        $event.target.process.command_line = /\/j/ nocase or
        $event.target.process.command_line = /–j/ nocase or
        $event.target.process.command_line = /—j/ nocase or
        $event.target.process.command_line = /―j/ nocase) and
        $event.target.process.command_line = /-q/ nocase or
        $event.target.process.command_line = /\/q/ nocase or
        $event.target.process.command_line = /–q/ nocase or
        $event.target.process.command_line = /—q/ nocase or
        $event.target.process.command_line = /―q/ nocase and
        (($event.principal.process.file.full_path = /^C:\\Users\\/ nocase and
        $event.principal.process.file.full_path = /\\AppData\\Local\\Temp\\/ nocase) or
        $event.principal.process.file.full_path != /^C:\\Windows\\Temp\\/ nocase or
        ($event.principal.process.file.full_path = "C:\\Windows\\CCM\\Ccm32BitLauncher.exe" nocase and
        $event.target.process.integrity_level_rid = /System|S-1-16-16384/ nocase)))
    condition:
        $event
}

------------------------------------------------------------

### proc_creation_win_rundll32_mshtml_runhtmlapplication.yaral ###
rule mshtml_dll_runhtmlapplication_suspicious_usage {
    meta:
        description = `Detects execution of commands that leverage the "mshtml.dll" RunHTMLApplication export to run arbitrary code via different protocol handlers (vbscript, javascript, file, http...)`
        references = `https://twitter.com/n1nj4sec/status/1421190238081277959, https://hyp3rlinx.altervista.org/advisories/MICROSOFT_WINDOWS_DEFENDER_TROJAN.WIN32.POWESSERE.G_MITIGATION_BYPASS_PART2.txt, http://hyp3rlinx.altervista.org/advisories/MICROSOFT_WINDOWS_DEFENDER_DETECTION_BYPASS.txt`
        mitre = `attack.defense-evasion, attack.execution`
        logsource = `process_creation`
        product = `windows`
    events:
        ($event.metadata.event_type = "PROCESS_LAUNCH") and
        ($event.target.process.command_line = /\\\.\.\\/ nocase and
        $event.target.process.command_line = /mshtml/ nocase and
        $event.target.process.command_line = /#135|RunHTMLApplication/ nocase)
    condition:
        $event
}

------------------------------------------------------------

### proc_creation_win_svchost_uncommon_parent_process.yaral ###
rule uncommon_svchost_parent_process {
    meta:
        description = `Detects an uncommon svchost parent process`
        references = `Internal Research`
        mitre = `attack.defense-evasion, attack.t1036.005`
        logsource = `process_creation`
        product = `windows`
    events:
        ($event.metadata.event_type = "PROCESS_LAUNCH") and
        ($event.target.process.file.full_path = /\\svchost\.exe$/ nocase and
        (($event.principal.process.file.full_path != /\\Mrt\.exe/ nocase and
        $event.principal.process.file.full_path != /\\MsMpEng\.exe/ nocase and
        $event.principal.process.file.full_path != /\\ngen\.exe/ nocase and
        $event.principal.process.file.full_path != /\\rpcnet\.exe/ nocase and
        $event.principal.process.file.full_path != /\\services\.exe/ nocase and
        $event.principal.process.file.full_path != /\\TiWorker\.exe/ nocase) or
        $event.principal.process.file.full_path = "" or
        ($event.principal.process.file.full_path != /-/ nocase and
        $event.principal.process.file.full_path != // nocase)))
    condition:
        $event
}

------------------------------------------------------------

### proc_creation_win_wlrmdr_uncommon_child_process.yaral ###
rule wlrmdr_exe_uncommon_argument_or_child_process {
    meta:
        description = `Detects the execution of "Wlrmdr.exe" with the "-u" command line flag which allows anything passed to it to be an argument of the ShellExecute API, which would allow an attacker to execute arbitrary binaries. This detection also focuses on any uncommon child processes spawned from "Wlrmdr.exe" as a supplement for those that posses "ParentImage" telemetry.`
        references = `https://twitter.com/0gtweet/status/1493963591745220608?s=20&t=xUg9DsZhJy1q9bPTUWgeIQ, https://lolbas-project.github.io/lolbas/Binaries/Wlrmdr/`
        mitre = `attack.defense-evasion, attack.t1218`
        logsource = `process_creation`
        product = `windows`
    events:
        ($event.metadata.event_type = "PROCESS_LAUNCH") and
        ($event.principal.process.file.full_path = /\\wlrmdr\.exe$/ nocase or
        (($event.target.process.file.full_path = /\\wlrmdr\.exe$/ nocase or
        $event.target.process.file.names = "WLRMNDR.EXE" nocase) and
        $event.target.process.command_line = /-s / nocase or
        $event.target.process.command_line = /\/s / nocase or
        $event.target.process.command_line = /–s / nocase or
        $event.target.process.command_line = /—s / nocase or
        $event.target.process.command_line = /―s / nocase and
        $event.target.process.command_line = /-f / nocase or
        $event.target.process.command_line = /\/f / nocase or
        $event.target.process.command_line = /–f / nocase or
        $event.target.process.command_line = /—f / nocase or
        $event.target.process.command_line = /―f / nocase and
        $event.target.process.command_line = /-t / nocase or
        $event.target.process.command_line = /\/t / nocase or
        $event.target.process.command_line = /–t / nocase or
        $event.target.process.command_line = /—t / nocase or
        $event.target.process.command_line = /―t / nocase and
        $event.target.process.command_line = /-m / nocase or
        $event.target.process.command_line = /\/m / nocase or
        $event.target.process.command_line = /–m / nocase or
        $event.target.process.command_line = /—m / nocase or
        $event.target.process.command_line = /―m / nocase and
        $event.target.process.command_line = /-a / nocase or
        $event.target.process.command_line = /\/a / nocase or
        $event.target.process.command_line = /–a / nocase or
        $event.target.process.command_line = /—a / nocase or
        $event.target.process.command_line = /―a / nocase and
        $event.target.process.command_line = /-u / nocase or
        $event.target.process.command_line = /\/u / nocase or
        $event.target.process.command_line = /–u / nocase or
        $event.target.process.command_line = /—u / nocase or
        $event.target.process.command_line = /―u / nocase and
        ($event.principal.process.file.full_path != "C:\\Windows\\System32\\winlogon.exe" nocase or
        ($event.principal.process.file.full_path != // nocase and
        $event.principal.process.file.full_path != /-/ nocase) or
        $event.principal.process.file.full_path = "")))
    condition:
        $event
}

------------------------------------------------------------

